
package au.net.electronichealth.ns.simd.tls.v2010;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.3-b01-
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SealedImmediateMessageDeliveryService", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedImmediateMessageDelivery/2010", wsdlLocation = "smd-SealedImmediateMessageDelivery-TLS-2010.wsdl")
public class SealedImmediateMessageDeliveryService
    extends Service
{

    private final static URL SEALEDIMMEDIATEMESSAGEDELIVERYSERVICE_WSDL_LOCATION;
    private final static WebServiceException SEALEDIMMEDIATEMESSAGEDELIVERYSERVICE_EXCEPTION;
    private final static QName SEALEDIMMEDIATEMESSAGEDELIVERYSERVICE_QNAME = new QName("http://ns.electronichealth.net.au/smd/svc/SealedImmediateMessageDelivery/2010", "SealedImmediateMessageDeliveryService");

    static {
        SEALEDIMMEDIATEMESSAGEDELIVERYSERVICE_WSDL_LOCATION = au.net.electronichealth.ns.simd.tls.v2010.SealedImmediateMessageDeliveryService.class.getResource("smd-SealedImmediateMessageDelivery-TLS-2010.wsdl");
        WebServiceException e = null;
        if (SEALEDIMMEDIATEMESSAGEDELIVERYSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'smd-SealedImmediateMessageDelivery-TLS-2010.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        SEALEDIMMEDIATEMESSAGEDELIVERYSERVICE_EXCEPTION = e;
    }

    public SealedImmediateMessageDeliveryService() {
        super(__getWsdlLocation(), SEALEDIMMEDIATEMESSAGEDELIVERYSERVICE_QNAME);
    }

    public SealedImmediateMessageDeliveryService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SEALEDIMMEDIATEMESSAGEDELIVERYSERVICE_QNAME, features);
    }

    public SealedImmediateMessageDeliveryService(URL wsdlLocation) {
        super(wsdlLocation, SEALEDIMMEDIATEMESSAGEDELIVERYSERVICE_QNAME);
    }

    public SealedImmediateMessageDeliveryService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SEALEDIMMEDIATEMESSAGEDELIVERYSERVICE_QNAME, features);
    }

    public SealedImmediateMessageDeliveryService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SealedImmediateMessageDeliveryService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SealedImmediateMessageDelivery
     */
    @WebEndpoint(name = "SealedImmediateMessageDelivery")
    public SealedImmediateMessageDelivery getSealedImmediateMessageDelivery() {
        return super.getPort(new QName("http://ns.electronichealth.net.au/smd/svc/SealedImmediateMessageDelivery/2010", "SealedImmediateMessageDelivery"), SealedImmediateMessageDelivery.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SealedImmediateMessageDelivery
     */
    @WebEndpoint(name = "SealedImmediateMessageDelivery")
    public SealedImmediateMessageDelivery getSealedImmediateMessageDelivery(WebServiceFeature... features) {
        return super.getPort(new QName("http://ns.electronichealth.net.au/smd/svc/SealedImmediateMessageDelivery/2010", "SealedImmediateMessageDelivery"), SealedImmediateMessageDelivery.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SEALEDIMMEDIATEMESSAGEDELIVERYSERVICE_EXCEPTION!= null) {
            throw SEALEDIMMEDIATEMESSAGEDELIVERYSERVICE_EXCEPTION;
        }
        return SEALEDIMMEDIATEMESSAGEDELIVERYSERVICE_WSDL_LOCATION;
    }

}
